def testJobResults = [:]
def channel = 'automation-mobile-reports'
@Library('auto-shared-lib') _
pipeline {
    agent {
        node {
            label "master"
        }
    }

    environment {
        NEW_JENKINS = 'true'
        NEXUS_CLI_USER_PASSWORD = credentials('NEXUS_CLI_USER_PASSWORD')
        DEFAULT_USER_PASSWORD_PLAIN = credentials('DEFAULT_USER_PASSWORD_PLAIN')
        DEFAULT_USER_PASSWORD_ENCODED = credentials('DEFAULT_USER_PASSWORD_ENCODED')
        AFTERSHIP_API_KEY = credentials('AFTERSHIP_API_KEY')
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(daysToKeepStr: '14', artifactDaysToKeepStr: '14'))
        timeout(time: 35, unit: 'MINUTES')
    }

    triggers {
        cron('15 12 * * 1-5')
    }

    stages {

        stage('Check is Hub available') {
            steps {
                script {
                    hub.checkIfHubAvailable()
                }
            }
        }

        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
                git(branch: 'master', credentialsId: 'vinted-ios', url: 'git@github.com:vinted/mobile-e2e-tests.git')
            }
        }

        stage('Run Catalog Scroll tests') {
            steps {
                sh "./gradlew --no-daemon clean catalogScrollTest -Dtest.platform=Android -Dtest.portal=INT"
            }
        }
    }

    post {
        always {
            sh "env"

            script {
                allure([
                        includeProperties: false,
                        jdk              : '',
                        properties       : [],
                        reportBuildPolicy: 'ALWAYS',
                        results          : [[path: 'app/build/allure-results']]
                ])
            }

            publishHTML(
                    target: [
                            allowMissing         : false,
                            alwaysLinkToLastBuild: false,
                            keepAll              : true,
                            reportDir            : 'app/build/allure-results',
                            reportFiles          : 'index.html',
                            reportName           : "Allure Report"
                    ]
            )
            script {
                testJobResults["INT"] = [result: "${currentBuild.result}", absoluteUrl: "${currentBuild.absoluteUrl}", buildNumber: "${currentBuild.number}"]
                report.generate_allure_report_collection(testJobResults, env.WORKSPACE)
            }

        }
        failure {
            script {
                slack.send_results_message(channel, "danger", ":android: calatog scroll", testJobResults)
            }
        }
        success {
            script {
                slack.send_results_message(channel, "good", ":android: calatog scroll", testJobResults)
            }
        }
        aborted {
            script {
                slack.send_results_message(channel, "warning", ":android: calatog scroll", testJobResults)
            }
        }
    }
}
